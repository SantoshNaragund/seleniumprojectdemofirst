<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-14T17:46:03 IST" name="Suite" finished-at="2023-08-14T17:46:12 IST" duration-ms="8843">
    <groups>
    </groups>
    <test started-at="2023-08-14T17:46:03 IST" name="ThreeTest" finished-at="2023-08-14T17:46:10 IST" duration-ms="6845">
      <class name="tests.ThreeTest">
        <test-method signature="threeTest()[pri:0, instance:tests.ThreeTest@54e041a4]" started-at="2023-08-14T17:46:03 IST" name="threeTest" finished-at="2023-08-14T17:46:10 IST" duration-ms="6806" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- threeTest -->
      </class> <!-- tests.ThreeTest -->
    </test> <!-- ThreeTest -->
    <test started-at="2023-08-14T17:46:03 IST" name="TwoTest" finished-at="2023-08-14T17:46:10 IST" duration-ms="6651">
      <class name="tests.TwoTest">
        <test-method signature="twoTest()[pri:0, instance:tests.TwoTest@7fd7a283]" started-at="2023-08-14T17:46:03 IST" name="twoTest" finished-at="2023-08-14T17:46:10 IST" duration-ms="6611" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- twoTest -->
      </class> <!-- tests.TwoTest -->
    </test> <!-- TwoTest -->
    <test started-at="2023-08-14T17:46:03 IST" name="FourTest" finished-at="2023-08-14T17:46:10 IST" duration-ms="6722">
      <class name="tests.FourTest">
        <test-method signature="fourTest()[pri:0, instance:tests.FourTest@37313c65]" started-at="2023-08-14T17:46:03 IST" name="fourTest" finished-at="2023-08-14T17:46:09 IST" duration-ms="6507" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at tests.FourTest.fourTest(FourTest.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fourTest -->
      </class> <!-- tests.FourTest -->
    </test> <!-- FourTest -->
    <test started-at="2023-08-14T17:46:03 IST" name="LoginTest" finished-at="2023-08-14T17:46:12 IST" duration-ms="8843">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="loginApplication()[pri:0, instance:tests.LoginTest@4808bc9b]" started-at="2023-08-14T17:46:03 IST" name="loginApplication" finished-at="2023-08-14T17:46:07 IST" duration-ms="4505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginApplication -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.LoginTest@4808bc9b]" started-at="2023-08-14T17:46:07 IST" name="login" data-provider="getLoginData" finished-at="2023-08-14T17:46:12 IST" duration-ms="4163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[santoshnaragund98@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Santu@1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Succusfully]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="closer()[pri:0, instance:tests.LoginTest@4808bc9b]" started-at="2023-08-14T17:46:12 IST" name="closer" finished-at="2023-08-14T17:46:12 IST" duration-ms="137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closer -->
      </class> <!-- tests.LoginTest -->
    </test> <!-- LoginTest -->
  </suite> <!-- Suite -->
</testng-results>
